group 'com.friskysoft'

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

project.version = '3.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.+'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.+'
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'
    implementation group: 'com.assertthat', name: 'selenium-shutterbug', version: '1.+'
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.+'
    testImplementation group: 'org.testng', name: 'testng', version: '7.+'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
}

clean {
    delete 'screenshots', 'target', 'build', 'out', 'test-output', 'test-results', 'video'
}

test {
    systemProperties System.getProperties()
    systemProperties System.getenv()

    useTestNG() {
        options {
            parallel = 'methods'
            threadCount = 4
        }
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
        showStandardStreams = false
        exceptionFormat = 'full'
    }

    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            println "\nResults: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
    }
}

tasks.withType(Jar) {
    manifest {
        attributes(
                "Name": project.name,
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "FriskySoft"
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    sign configurations.archives
}

//publishing.dependsOn signArchives
//publishing {
//
//    def repoUsername = ""
//    def repoPassword = ""
//    def snapshotRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//    def stagingRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//    def scmUrl = 'https://github.com/friskysoft/friskybrowser'
//
//    if (project.hasProperty('ossrhUsername')) {
//        repoUsername = ossrhUsername
//    }
//
//    if (project.hasProperty('ossrhPassword')) {
//        repoPassword = ossrhPassword
//    }
//
//    doFirst {
//        println("Uploading artifacts to maven:")
//        println("* snapshot repo: " + snapshotRepoUrl)
//        println("* release repo: " + stagingRepoUrl)
//        println("* username: " + repoUsername)
//        println("* password: " + repoPassword.replaceAll('.', '*'))
//        println("* artifacts:")
//        configurations.archives.allArtifacts.each { arc ->
//            println('-- ' + arc.file)
//        }
//    }
//
//    repositories {
//        maven {
//            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
//            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
//            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
//        }
//    }
//
//    publications {
//        mavenJava(MavenPublication) {
//            pom {
//                name = project.name
//                description = project.name
//                groupId = project.group
//                artifactId = project.name
//                version = project.version
//                packaging = 'jar'
//
//                url = scmUrl
//
//                scm {
//                    url = scmUrl
//                }
//
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id = 'rafaat'
//                        name = 'Rafaat Hossain'
//                        email = 'rafaat123@gmail.com'
//                    }
//                }
//            }
//        }
//    }
//}
//
//uploadArchives {
//
//    dependsOn signArchives
//
//    def repoUsername = ""
//    def repoPassword = ""
//    def snapshotRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//    def stagingRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//    def scmUrl = 'https://github.com/friskysoft/friskybrowser'
//
//    if (project.hasProperty('ossrhUsername')) {
//        repoUsername = ossrhUsername
//    }
//
//    if (project.hasProperty('ossrhPassword')) {
//        repoPassword = ossrhPassword
//    }
//
//    doFirst {
//        println("Uploading artifacts to maven:")
//        println("* snapshot repo: " + snapshotRepoUrl)
//        println("* release repo: " + stagingRepoUrl)
//        println("* username: " + repoUsername)
//        println("* password: " + repoPassword.replaceAll('.', '*'))
//        println("* artifacts:")
//        configurations.archives.allArtifacts.each { arc ->
//            println('-- ' + arc.file)
//        }
//    }
//
//    repositories {
//        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            repository(url: stagingRepoUrl) {
//                authentication(userName: repoUsername, password: repoPassword)
//            }
//
//            snapshotRepository(url: snapshotRepoUrl) {
//                authentication(userName: repoUsername, password: repoPassword)
//            }
//
//            pom.project {
//                name project.name
//                packaging 'jar'
//                artifactId project.name
//                version project.version
//                groupId project.group
//                description project.name
//
//                url scmUrl
//
//                scm {
//                    url scmUrl
//                }
//
//                licenses {
//                    license {
//                        name 'The Apache License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'hossain'
//                        name 'Rafaat Hossain'
//                        email 'rafaat123@gmail.com'
//                    }
//                }
//            }
//        }
//    }
//}
